buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'java'
    id 'io.freefair.lombok' version '6.3.0'
    id 'wtf.gofancy.fancygradle' version '1.+'
    id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin' version '1.+'
    id 'dev.galacticraft.gradleutils' version '1.0.3'
}

apply plugin: 'net.minecraftforge.gradle'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
lombok.version = "1.18.22"

version = "${mc_version}-${gradleutils.getVersion()}"
group = "micdoodle8.mods.galacticraft"
archivesBaseName = "Galacticraft"

apply from: 'gradle/minecraft.gradle'

task generateChangelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    group = 'script-tasks'
    description = 'Generates Changelog'

    fromRepo = file(".");
    settingsFile = file("changelog.json").getAbsolutePath();
    file = file("${projectDir}/CHANGELOG-${project.version}.md");
    templateContent = file('changelog.mustache').getText('UTF-8');
}

ext {
    MANIFEST = manifest{
        attributes([
            'Specification-Title'         : 'Galacticraft',
            'Specification-Vendor'        : 'TeamGalacticraft',
            'Specification-Version'       : gradleutils.getVersion(),
            'Implementation-Title'        : project.group,
            'Implementation-Version'      : gradleutils.getVersion(),
            'Implementation-Vendor'       : 'Galacticraft',
            'Implementation-Timestamp'    : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            'FMLAT'                       : 'accesstransformer.cfg',
            'FMLCorePluginContainsFMLMod' : 'true',
            'FMLCorePlugin'               : 'micdoodle8.mods.miccore.MicdoodlePlugin',
            'Build-Against'               : "Forge: ${forge_version}",
            'Built-Using'                 : "ForgeGradle: 5.1.+"
        ] as LinkedHashMap)
    }
}

jar {
    manifest.from(MANIFEST)
}

jar.finalizedBy('reobfJar')

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
    from sourceSets.main.allSource
    manifest.from(MANIFEST)
}

task apiJar(type: Jar) {
    classifier "api"
    include 'micdoodle8/mods/galacticraft/api/**'
    from sourceSets.main.allJava
    from sourceSets.main.output
    manifest.from(MANIFEST)
}

task deobfJar(type: Jar) {
	classifier = 'deobf'
    from sourceSets.main.output
    manifest.from(MANIFEST)
}

artifacts {
    archives deobfJar
    archives sourcesJar
    archives apiJar
}

apply from: 'gradle/resources.gradle'

clean {
    def filteredDelete = new HashSet<>()
    for (def toDelete : getDelete()) {
        for (def f : file(toDelete).listFiles()) {
            if (f.getName() != "fg_cache") {
                filteredDelete.add(f)
            }
        }
    }
    setDelete(filteredDelete)
}

apply plugin: "maven-publish"
apply plugin: 'signing'

publishing {
    publications {
        Galacticraft(MavenPublication) {
            groupId 'micdoodle8.mods'
            artifactId 'galacticraft'
            version gradleutils.getVersion()

            artifact jar
            artifact deobfJar
            artifact sourcesJar
            artifact apiJar
            
            pom {
                name = 'Galacticraft'
                description = 'An advanced space exploration mod for Minecraft'
                url = 'https://github.com/TeamGalacticraft/Galacticraft-Legacy'
                scm {
                    url = 'https://github.com/TeamGalacticraft/Galacticraft-Legacy'
                    connection = 'scm:git:git://github.com/TeamGalacticraft/Galacticraft-Legacy.git'
                    developerConnection = 'scm:git:git@github.com:TeamGalacticraft/Galacticraft-Legacy.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/TeamGalacticraft/Galacticraft-Legacy/issues'
                }

                licenses {
                    license {
                        name = 'custom'
                        url = 'https://github.com/TeamGalacticraft/Galacticraft-Legacy/blob/master/LICENSE.txt'
                    }
                }
            }
        }
    }
    repositories {
        maven gradleutils.getPublishingMaven()
    }

    signing {
        publishing.publications.each {
            sign it
        }
    }
}
