buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'java'
    id 'io.freefair.lombok' version '6.3.0'
    id 'org.ajoberstar.grgit' version '4.1.1'
    id 'wtf.gofancy.fancygradle' version '1.+'
    id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin' version '1.+'
}

apply plugin: 'net.minecraftforge.gradle'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
lombok.version = "1.18.22"

ext {
	IS_SNAPSHOT = false
	COMMIT = grgit.head().abbreviatedId.toString()
	
	VERSION = '4.0.2.283'
	MC_VERSION = '1.12.2'
	FORGE_VERSION = '14.23.5.2860'
	
	MAPPING_CHANNEL = 'stable'
	MAPPING_VERSION = '39-1.12'
}

// Produces a version string based on if we are building a snapshot or not
// Example: if IS_SNAPSHOT = true
// 1.12.2-4.0.2-snapshot.fd97d04
def getVersion = {
	def hash = grgit.head().abbreviatedId.toString()
	return "${MC_VERSION}-${VERSION}${t -> if (IS_SNAPSHOT) t << '-snapshot.' + hash}".toString()
}

version = getVersion()
group = "micdoodle8.mods.galacticraft"
archivesBaseName = "Galacticraft"

ext {
	MANIFEST = manifest{
        attributes([
            'Specification-Title'         : 'Galacticraft',
            'Specification-Vendor'        : 'TeamGalacticraft',
            'Specification-Version'       : version.split("-")[1],
            'Implementation-Title'        : project.group,
            'Implementation-Version'      : version.split("-")[1],
            'Implementation-Vendor'       : 'Galacticraft',
            'Implementation-Timestamp'    : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            'FMLAT'                       : 'accesstransformer.cfg',
            'FMLCorePluginContainsFMLMod' : 'true',
            'FMLCorePlugin'               : 'micdoodle8.mods.miccore.MicdoodlePlugin',
            'Build-Against'				  : "Forge: ${FORGE_VERSION}",
            'Built-Using'				  : "ForgeGradle: 5.1.+",
            'Git-Commit'				  : grgit.head().abbreviatedId,
            'Git-Branch'                  : grgit.branch.current().getName()
        ] as LinkedHashMap)
    }
}

apply from: 'gradle/minecraft.gradle'

task generateChangelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    group = 'script-tasks'
    description = 'Generates Changelog'

    fromRepo = file(".");
    settingsFile = file("changelog.json").getAbsolutePath();
    file = file("${projectDir}/CHANGELOG-${project.version}.md");
    templateContent = file('changelog.mustache').getText('UTF-8');
}

import net.minecraftforge.gradle.common.tasks.SignJar

task signJar(type: SignJar) {

    onlyIf {
        project.hasProperty('keyStore')
    }
    
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

jar {
    manifest.from(MANIFEST)
    
    afterEvaluate { project.getTasks().getByName('reobfJar').finalizedBy(signJar) }
}

jar.finalizedBy('reobfJar')

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
    from sourceSets.main.allSource
    manifest.from(MANIFEST)
}

task apiJar(type: Jar) {
    classifier "api"
    include 'micdoodle8/mods/galacticraft/api/**'
    from sourceSets.main.allJava
    from sourceSets.main.output
    manifest.from(MANIFEST)
}

task deobfJar(type: Jar) {
	classifier = 'deobf'
    from sourceSets.main.output
    manifest.from(MANIFEST)
}

artifacts {
    archives deobfJar
    archives sourcesJar
    archives apiJar
}

apply from: 'gradle/maven.gradle'
apply from: 'gradle/resources.gradle'

build.dependsOn signJar